0723：
面向对象三大特征（封装，继承，多态）or四大特征（封装，继承，多态，抽象）
特征可以说有三种，继承、封装、多态，也可以说有四种，继承、封装、多态、抽象。

继承性是类的一种层次模型，其提供了一种明确表述共性的方法，对象的新类可以从现有的类中继承派生，类可以从它的基类那里继承方法和实例变量，并且类可以修改或增加新的方法使之更适合特殊的需要。

封装性是把过程和数据包围起来，使得数据的访问只能通过已定义的接口，保证了对象被访问的隐私性和可靠性（优点）。

多态性是对象在不同时刻表现出来的多种状态，是一种编译时期状态和运行时期状态不一致的现象，多态性包括参数化多态性和包含多态性。

抽象性是指对一类事物的高度提炼以得到共同的共性部分，抽象不需要了解全部细节，而只是一种通用的描述约束，抽象可以是过程抽象或者数据抽象。

多态的优点：
提高了代码的维护性（继承保证）；
提高了代码的扩展性（由多态保证）；

多态的缺点：
不能使用子类的特有功能（非要使用只能通过不优雅的创建子类对象方式，但是占用内存，其次就是使用强转类型，也容易出现问题）；
向下转型（把父类转换为子类型）中有可能会出现异常；

子类如何访问父类的私有属性或方法？ 子类通过super关键字调用父类公有方法，在父类公有方法中访问父类私有方法。

重载(overload)不属于多态，或者说不属于面向对象的多态，函数名相同，参数不同（数量，类型，顺序）。这两个函数就形成了重载。
重载与函数返回类型号没有关系，重载只跟函数名和参数有关系，故不能重载只有返回值不同的方法名
重载了的函数，会自动跟据调用的实参来决定调用哪个函数（在编译时期就确定了，故不属于多态）
除了构造函数可以重载，普通成员函数也可以重载，可以有不同的访问修饰符，可以抛出不同的异常

重写（override），也叫覆盖，一般为子类复写父类的方法，要求同名同参同返回值，子类方法不能缩小父类方法的访问权限，不能抛出比父类更大更多的异常，定义为final的方法不可以重写

讨论题：Integer i=1;i+=1;做了哪些事？  首先1为int类型，调用valueOf()方法将1自动装箱为Integer类型，之后再调用intValue()方法进行自动拆箱，计算完成后再自动装箱。
Integer i=0;Sysout.out.println(i=i++);   输出为0  原因是要将i++的值赋值给i，java会将i++的值0先存储起来，然后i自加为1，然后将存储的i++的值赋值给i，最终i为0
Integer和int的区别，Integer是int的包装类，Integer是引用类型，初值为null；int为基本数据类型，初值为0.
