主  题：日报
汇报人：何米娜
日  期：2018年7月30日 星期一
内  容：
1.今日学习了的内容：
（1 JVM的第二，三章
（2 复习Servlet的原理
（3 两道算法
（4 30道选择题
（5 shiro的2个视频

2.没有解决的问题：
（1 复习Servlet的原理



3.明天的学习计划：
（1 shiro的3个视频


4.学习任务完成度： （80）  %[注：0% ~ 100%]
5.对自己今天学习的满意度：（8）分 [注：1-10分]
6.对今天的学习做一句话的总结：
	继续努力
算法1：
题目：
主  题：日报
汇报人：何米娜
日  期：2018年7月30日 星期一
内  容：
1.今日学习了的内容：
（1 JVM的第四章
（2 复习Servlet
（3 两道算法
（4 shiro的3个视频

2.没有解决的问题：
（1 JVM的第四章
（2 一道算法


3.明天的学习计划：
（1 shiro的3个视频
（2 Springboot的视频


4.学习任务完成度： （80）  %[注：0% ~ 100%]
5.对自己今天学习的满意度：（8）分 [注：1-10分]
6.对今天的学习做一句话的总结：
	继续努力
算法1：
题目：import java.util.Stack;
/**
*应用一个辅助栈，压的时候，如果A栈的压入比B栈压入大，B栈不压，，，，小于等于，AB栈同时压入，
* 出栈，如果，AB栈顶元素不等，A出，B不出。
*/
public class Solution {
    Stack<Integer> data = new Stack<Integer>();
    Stack<Integer> min = new Stack<Integer>();
    Integer temp = null;
    public void push(int node) {
        if(temp != null){
            if(node <= temp ){
                temp = node;
                min.push(node);
            }
            data.push(node);
        }else{
            temp = node;
            data.push(node);
            min.push(node);
        }
    }
     
    public void pop() {
        int num = data.pop();
        int num2 = min.pop();
        if(num != num2){
           min.push(num2);
        }
    }
     
    public int top() {
        int num = data.pop();
        data.push(num);
        return num;
    }
     
    public int min() {
        int num = min.pop();
        min.push(num);
        return num;
    }
}
算法2：
题目：
/*
输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。
假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈
序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列；
（注意：这两个序列的长度是相等的）
*/
PS:明天补上
