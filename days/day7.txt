日报格式:
主  题：日报
汇报人：汤磊
日  期：2018年7月29日 星期日
内  容：
1.	今日学习了的内容：
1）springboot的搭建（进一步的完善）（XML配置和注解配置）
2）	Map、HashMap源码
3）	两道算法
2.	没有解决的问题：
1）Linux的五个视频
3.	明天的学习计划：
1）HashTable源码
2）Linux5个视频
3）算法两道
4.学习任务完成度： （60）%[注：0% ~ 100%]
5.对自己今天学习的满意度：（5）分 [注：1-10分]
因为今天讨论了几个小时的数据库的设计和需求以至于没有时间看源码
附录：
算法一：
给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。

不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。

示例 1:

给定 nums = [3,2,2,3], val = 3,

函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。

你不需要考虑数组中超出新长度后面的元素。
示例 2:

给定 nums = [0,1,2,2,3,0,4,2], val = 2,

函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。

注意这五个元素可为任意顺序。

你不需要考虑数组中超出新长度后面的元素。
说明:

为什么返回数值是整数，但输出的答案是数组呢?

请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。

你可以想象内部操作如下:

// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝
int len = removeElement(nums, val);

// 在函数里修改输入数组对于调用者是可见的。
// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。
for (int i = 0; i < len; i++) {
    print(nums[i]);
}
class Solution {
    public int removeElement(int[] nums, int val) {
        if(nums.length<1){
            return 0;
        }
        int len=0;
        for(int i=0;i<nums.length;++i){
            if(nums[i]!=val){
                if(len!=i)
                    nums[len]=nums[i];
                len++;
            }
        }
        return len;
    }
}
算法二：
实现 strStr() 函数。

给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回  -1。

示例 1:

输入: haystack = "hello", needle = "ll"
输出: 2
示例 2:

输入: haystack = "aaaaa", needle = "bba"
输出: -1
说明:

当 needle 是空字符串时，我们应当返回什么值呢？这是一个在面试中很好的问题。

对于本题而言，当 needle 是空字符串时我们应当返回 0 。这与C语言的 strstr() 以及 Java的 indexOf() 定义相符。
class Solution {
    public int strStr(String haystack, String needle) {
        
        if(needle==null||needle.length()<1){
            return 0;
        }
        if(haystack==null||haystack.length()<1||haystack.length()<needle.length()){
            return -1;
        }
        int res;
        char[] c1=haystack.toCharArray();
        char[] c2=needle.toCharArray();
        for(res=0;res<c1.length-c2.length+1;res++){
            int i;
            for(i=0;i<c2.length&&c2[i]==c1[res+i];++i);
            if(i==c2.length){
                break;
            }
        }
        if(res==c1.length-c2.length+1){
            return -1;
        }
        else{
            return res;
        }
    }
}
        return right;
    }
}
【学习内容真实可靠，给自己的评分和完成度客观真实，不谦虚，不夸大】
