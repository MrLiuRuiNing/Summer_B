日报格式:
主  题：日报
汇报人：汤磊
日  期：2018年7月28日 星期六
内  容：
1.	今日学习了的内容：
1）springboot的搭建（进一步的完善）（XML配置和注解配置）
2）	Linux的五个视频
3）	两道算法
2.	没有解决的问题：
1）Map、HashMap源码
3.	明天的学习计划：
1）Map，HashMap源码
2）Linux5个视频
3）算法两道
4.学习任务完成度： （60）%[注：0% ~ 100%]
5.对自己今天学习的满意度：（4）分 [注：1-10分]
因为今天讨论了几个小时的数据库的设计和需求以至于没有时间看源码
附录：
算法一： 
给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。

你的算法时间复杂度必须是 O(log n) 级别。

如果数组中不存在目标值，返回 [-1, -1]。

示例 1:

输入: nums = [5,7,7,8,8,10], target = 8
输出: [3,4]
示例 2:

输入: nums = [5,7,7,8,8,10], target = 6
输出: [-1,-1]
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int res=find(nums,target);
        if(res==nums.length||nums[res]!=target){
            return new int[]{-1,-1};
        }
        return new int[]{res,find(nums,target+1)-1};
    }
    public int find(int [] nums,int target){
        int left=0,right=nums.length;
        while(right>left){
            int mid=(left+right)>>1;
            if(nums[mid]<target){
                left=mid+1;
            }
            else{
                right=mid;
            }
        }
        return left;
    }
}
算法二：
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

你可以假设数组中无重复元素。

示例 1:

输入: [1,3,5,6], 5
输出: 2
示例 2:

输入: [1,3,5,6], 2
输出: 1
示例 3:

输入: [1,3,5,6], 7
输出: 4
示例 4:

输入: [1,3,5,6], 0
输出: 0
class Solution {
    public int searchInsert(int[] nums, int target) {
        int left=0,right=nums.length;
        while(left<right){
            int mid=(left+right)>>1;
            if(nums[mid]<target){
                if(mid<nums.length-1&&nums[mid+1]>target){
                    return mid+1;        
                }
                left=mid+1;
            }
            else{
                if(nums[mid]==target){
                    return mid;
                }
                right=mid;
            }
        }
        return right;
    }
}
【学习内容真实可靠，给自己的评分和完成度客观真实，不谦虚，不夸大】
