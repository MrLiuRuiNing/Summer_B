日报格式:
主  题：日报
汇报人：汤磊
日  期：2018年8月1日 星期二
内  容：
1.	今日学习了的内容：
1）springboot的搭建进一步封装
2）两道算法
2.没有解决的问题：
1）Springboot与es整合
2）如果有时间Springboot与shiro整合
3.	明天的学习计划：
1)Springboot与Redis整合
2）两道算法
3）与es整合

3）算法两道
4.学习任务完成度： （60）%[注：0% ~ 100%]
5.对自己今天学习的满意度：（5）分 [注：1-10分]
因为封装时间太长没有时间整合
附录：
算法一

给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。

示例:

给定 1->2->3->4, 你应该返回 2->1->4->3.
说明:

你的算法只能使用常数的额外空间。
你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head==null||head.next==null){
            return head;
        }
        ListNode q=head;
        ListNode p=head.next;
        ListNode h=null,h2=null;
        while(q!=null&&p!=null){
            if(h==null){
                h=p;
                h2=q;
            }         
            if(h2!=null){
                h2.next=p;
                h2=q;
            }
            ListNode j=p.next; 
            p.next=q;
            q.next=j;
            q=j;
            if(q!=null)
                p=q.next;
        }
        return h;
    }
}
算法二

给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。

不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

示例 1:

给定数组 nums = [1,1,2], 

函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 

你不需要考虑数组中超出新长度后面的元素。
示例 2:

给定 nums = [0,0,1,1,1,2,2,3,3,4],

函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。

你不需要考虑数组中超出新长度后面的元素。
说明:

为什么返回数值是整数，但输出的答案是数组呢?

请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。
你可以想象内部操作如下:

// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝
int len = removeDuplicates(nums);

// 在函数里修改输入数组对于调用者是可见的。
// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。
for (int i = 0; i < len; i++) {
    print(nums[i]);
}

class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length<2){
            return nums.length;
        }
        int len=1;
        for(int i=1;i<nums.length;++i){
            if(nums[i]!=nums[i-1]){
                if(len!=i)
                    nums[len]=nums[i];
                len++;
            }
        }
        return len;
    }
    
}
【学习内容真实可靠，给自己的评分和完成度客观真实，不谦虚，不夸大】
