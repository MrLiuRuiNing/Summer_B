日报格式:
主  题：日报
汇报人：陈鑫
日  期：2018年7月27日 星期五
内  容：
1.今日学习了的内容：
1）git的学习
2）两道算法题
3）Spring的di、IOC和Aop
4）Spring动态代理
2.没有解决的问题：
1）
3.明天的学习计划：
1）继续学习Spring，争取能学习到SSM整合
2）两道算法题
3）git学习视频看完并进行练习
4.学习任务完成度： （60%）%[注：0% ~ 100%]
5.对自己今天学习的满意度：（6）分 [注：1-10分]
6.对今天的学习做一句话的总结：成功在于坚持，依然坚信，如果你付出了，一定会有回报的。
附录：
算法1：剑指Offer
题目：输入一个链表，输出该链表中倒数第k个结点。
{代码}
public class Number_14 {
    public ListNode FindKthToTail(ListNode head,int k) {
        if(k <1 ){    // if k<1,代表链表没有该节点，则返回null
            return null;
        }

        int n = 0;
        ListNode h = head;
        while(h != null){
            h = h.next;
            n++;
        }
        n = n - k+1;
        if(n <= 0 ){    // if k>=n,代表链表没有该节点，则返回null
            return null;
        }
        while(--n>0 && head!= null){  // if k < n(包括了k<=0)
            head = head.next;
        }
        return head;

    }


}

算法2：剑指Offer
题目：输入一个链表，反转链表后，输出新链表的表头。
{代码}

  /**
 * 利用栈的先进先出，来实现链表反转
 */
public class Number_15 {
    public static void main(String[] args) {
        int []arr = {5,4,3,2,1};
        ListNode head = new ListNode(5);
        ListNode h = head;
        for(int i=1; i<5; ++i){
            h.next = new ListNode(arr[i]);
            h = h.next;
        }
        head = new Number_15().ReverseList(head);
        while (head != null){
            System.out.println(head.val);
            head = head.next;
        }
    }
    public ListNode ReverseList(ListNode head) {
        if(head == null){
            return null;
        }
        Stack<ListNode> stack = new Stack<ListNode>();
        while(head != null){
            stack.push(head);
            head = head.next;
        }
        head = stack.pop();
        ListNode h = head;
        while (!stack.empty()){
            head.next = stack.pop();
            head = head.next;
        }
        head.next =null; // 将尾部元素置空，否则会出现最后两个元素相互引用
        return h;
    }
}

【学习内容真实可靠，给自己的评分和完成度客观真实，不谦虚，不夸大】
