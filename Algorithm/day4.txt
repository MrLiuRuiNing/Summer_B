算法一： 二进制求和
题目描述
提示帮助
提交记录
社区讨论
阅读解答
给定两个二进制字符串，返回他们的和（用二进制表示）。

输入为非空字符串且只包含数字 1 和 0。

示例 1:

输入: a = "11", b = "1"
输出: "100"
示例 2:

输入: a = "1010", b = "1011"
输出: "10101"
class Solution {
    public String addBinary(String a, String b) {
        char []s1=a.toCharArray();
        char []s2=b.toCharArray();
       
        if(s1.length<s2.length){
            return add(s2,s1);
        }else{
            return add(s1,s2);
        }
    }
    public String add(char[] s1,char[] s2){
        int len =s2.length-1;
        char[] re=new char[s1.length+s2.length];
        int cp=0;
        int leng=re.length-1;
        for(int i=1;i<s1.length+1;len--,i++){
             char sum='0';
            if(len>-1){
                sum=(char)(s1[s1.length-i]+(s2[len]-'0')+cp);
                
            }else{
                sum=(char)(s1[s1.length-i]+cp);
            }
            cp=(sum-'0')/2;
            re[leng--]=(char)((sum-'0')%2+'0');
        }
         if(cp!=0){
            re[leng--]=(char)('0'+cp);
        }
        return new String(re,leng+1,re.length-leng-1);
    }
}
算法二：x 的平方根
题目描述
提示帮助
提交记录
社区讨论
阅读解答
实现 int sqrt(int x) 函数。

计算并返回 x 的平方根，其中 x 是非负整数。

由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。

示例 1:

输入: 4
输出: 2
示例 2:

输入: 8
输出: 2
说明: 8 的平方根是 2.82842..., 
     由于返回类型是整数，小数部分将被舍去。
	 class Solution {
    public int mySqrt(int x) {
        int low=0,high=46341,mid=0;
        while(low<=high){
            if(mid==low+(high-low)/2){
                return mid;
            }
            mid=low+(high-low)/2;
            int s=mid*mid;
            if(s==x){
                return mid;
            }else if(s>x){
                high=mid;
            }else{
                low=mid;
            }
        }
        return mid;
    }
}

